# Default values for affine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Install redis as a depending chart
redisDependencyEnabled: false
# -- Install mariadb as a depending chart
postgresqlDependencyEnabled: true

replicaCount: 2

image:
  repository: ghcr.io/toeverything/affine-graphql
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "stable"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  enabled: False
  # existingClaim: ""
  # mountPath: /var/affine
  # size: "3Gi"
  # accessModes:
  #   - ReadWriteOnce
  # storageClass: ""
  # selector: {}

# Additional volumes on the output Deployment definition.
volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

volumeMounts: []
  # - mountPath: /var/affine
  #   name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 1Gi
  # requests:
  #   cpu: 200m
  #   memory: 512Mi

ports:
  - containerPort: 3010
    protocol: TCP
  - containerPort: 5555
    protocol: TCP

env:
  NODE_OPTIONS: "--import=./scripts/register.js"
  AFFINE_CONFIG_PATH: /root/.affine/config
  # NODE_ENV: production
  # AFFINE_SERVER_HOST: "0.0.0.0"
  # AFFINE_SERVER_PORT: "8000"
  # AFFINE_SERVER_HTTPS: ""
  # AFFINE_SERVER_EXTERNAL_URL: ""
  # DATABASE_URL: ""
  # REDIS_SERVER_HOST: ""
  # REDIS_SERVER_PORT: ""
  # REDIS_SERVER_USER: ""
  # REDIS_SERVER_PASSWORD: ""
  # REDIS_SERVER_DATABASE: ""
  # MAILER_HOST: ""
  # MAILER_PORT: ""
  # MAILER_USER: ""
  # MAILER_PASSWORD: ""
  # MAILER_SENDER: ""
  # MAILER_SECURE: true
  # REDIS_SERVER_HOST: ""

service:
  type: ClusterIP
  ports:
    - port: 3010
      targetPort: 3010
      name: "3010"
    - port: 5555
      targetPort: 5555
      name: "5555"

ingress:
  enabled: true
  className: ""
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.net
      paths:
        - path: /
          pathType: Prefix
          servicePort: 3010
  tls:
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Configure redis dependency chart
redis:
  auth:
    # -- Enable redis authentication
    enabled: true
    # -- Configure redis password
    password: "CHANGEME"

# Configure postgresql as a dependency chart
postgresql:
 auth:
   # -- Configure postgresql auth username
   username: CHANGEME
   # -- Configure postgresql auth password
   password: CHANGEME
   # -- Configure postgresql auth database
   database: affine
